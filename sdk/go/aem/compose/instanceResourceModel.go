// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compose

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wttech/pulumi-provider-aem/sdk/go/aem/internal"
)

type InstanceResourceModel struct {
	pulumi.CustomResourceState

	Length pulumi.IntOutput    `pulumi:"length"`
	Result pulumi.StringOutput `pulumi:"result"`
}

// NewInstanceResourceModel registers a new resource with the given unique name, arguments, and options.
func NewInstanceResourceModel(ctx *pulumi.Context,
	name string, args *InstanceResourceModelArgs, opts ...pulumi.ResourceOption) (*InstanceResourceModel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Length == nil {
		return nil, errors.New("invalid value for required argument 'Length'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceResourceModel
	err := ctx.RegisterResource("aem:compose:InstanceResourceModel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceResourceModel gets an existing InstanceResourceModel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceResourceModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceResourceModelState, opts ...pulumi.ResourceOption) (*InstanceResourceModel, error) {
	var resource InstanceResourceModel
	err := ctx.ReadResource("aem:compose:InstanceResourceModel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceResourceModel resources.
type instanceResourceModelState struct {
}

type InstanceResourceModelState struct {
}

func (InstanceResourceModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceResourceModelState)(nil)).Elem()
}

type instanceResourceModelArgs struct {
	Length int `pulumi:"length"`
}

// The set of arguments for constructing a InstanceResourceModel resource.
type InstanceResourceModelArgs struct {
	Length pulumi.IntInput
}

func (InstanceResourceModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceResourceModelArgs)(nil)).Elem()
}

type InstanceResourceModelInput interface {
	pulumi.Input

	ToInstanceResourceModelOutput() InstanceResourceModelOutput
	ToInstanceResourceModelOutputWithContext(ctx context.Context) InstanceResourceModelOutput
}

func (*InstanceResourceModel) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceResourceModel)(nil)).Elem()
}

func (i *InstanceResourceModel) ToInstanceResourceModelOutput() InstanceResourceModelOutput {
	return i.ToInstanceResourceModelOutputWithContext(context.Background())
}

func (i *InstanceResourceModel) ToInstanceResourceModelOutputWithContext(ctx context.Context) InstanceResourceModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceResourceModelOutput)
}

type InstanceResourceModelOutput struct{ *pulumi.OutputState }

func (InstanceResourceModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceResourceModel)(nil)).Elem()
}

func (o InstanceResourceModelOutput) ToInstanceResourceModelOutput() InstanceResourceModelOutput {
	return o
}

func (o InstanceResourceModelOutput) ToInstanceResourceModelOutputWithContext(ctx context.Context) InstanceResourceModelOutput {
	return o
}

func (o InstanceResourceModelOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v *InstanceResourceModel) pulumi.IntOutput { return v.Length }).(pulumi.IntOutput)
}

func (o InstanceResourceModelOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceResourceModel) pulumi.StringOutput { return v.Result }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceResourceModelInput)(nil)).Elem(), &InstanceResourceModel{})
	pulumi.RegisterOutputType(InstanceResourceModelOutput{})
}
