// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package compose

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/wttech/pulumi-aem/sdk/go/aem/internal"
)

type InstanceResourceModel struct {
	pulumi.CustomResourceState

	Client    ClientModelOutput        `pulumi:"client"`
	Compose   ComposeModelPtrOutput    `pulumi:"compose"`
	Files     pulumi.StringMapOutput   `pulumi:"files"`
	Instances InstanceModelArrayOutput `pulumi:"instances"`
	System    SystemModelPtrOutput     `pulumi:"system"`
}

// NewInstanceResourceModel registers a new resource with the given unique name, arguments, and options.
func NewInstanceResourceModel(ctx *pulumi.Context,
	name string, args *InstanceResourceModelArgs, opts ...pulumi.ResourceOption) (*InstanceResourceModel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Client == nil {
		return nil, errors.New("invalid value for required argument 'Client'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceResourceModel
	err := ctx.RegisterResource("aem:compose:InstanceResourceModel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceResourceModel gets an existing InstanceResourceModel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceResourceModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceResourceModelState, opts ...pulumi.ResourceOption) (*InstanceResourceModel, error) {
	var resource InstanceResourceModel
	err := ctx.ReadResource("aem:compose:InstanceResourceModel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceResourceModel resources.
type instanceResourceModelState struct {
}

type InstanceResourceModelState struct {
}

func (InstanceResourceModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceResourceModelState)(nil)).Elem()
}

type instanceResourceModelArgs struct {
	Client  ClientModel       `pulumi:"client"`
	Compose *ComposeModel     `pulumi:"compose"`
	Files   map[string]string `pulumi:"files"`
	System  *SystemModel      `pulumi:"system"`
}

// The set of arguments for constructing a InstanceResourceModel resource.
type InstanceResourceModelArgs struct {
	Client  ClientModelInput
	Compose ComposeModelPtrInput
	Files   pulumi.StringMapInput
	System  SystemModelPtrInput
}

func (InstanceResourceModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceResourceModelArgs)(nil)).Elem()
}

type InstanceResourceModelInput interface {
	pulumi.Input

	ToInstanceResourceModelOutput() InstanceResourceModelOutput
	ToInstanceResourceModelOutputWithContext(ctx context.Context) InstanceResourceModelOutput
}

func (*InstanceResourceModel) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceResourceModel)(nil)).Elem()
}

func (i *InstanceResourceModel) ToInstanceResourceModelOutput() InstanceResourceModelOutput {
	return i.ToInstanceResourceModelOutputWithContext(context.Background())
}

func (i *InstanceResourceModel) ToInstanceResourceModelOutputWithContext(ctx context.Context) InstanceResourceModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceResourceModelOutput)
}

type InstanceResourceModelOutput struct{ *pulumi.OutputState }

func (InstanceResourceModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceResourceModel)(nil)).Elem()
}

func (o InstanceResourceModelOutput) ToInstanceResourceModelOutput() InstanceResourceModelOutput {
	return o
}

func (o InstanceResourceModelOutput) ToInstanceResourceModelOutputWithContext(ctx context.Context) InstanceResourceModelOutput {
	return o
}

func (o InstanceResourceModelOutput) Client() ClientModelOutput {
	return o.ApplyT(func(v *InstanceResourceModel) ClientModelOutput { return v.Client }).(ClientModelOutput)
}

func (o InstanceResourceModelOutput) Compose() ComposeModelPtrOutput {
	return o.ApplyT(func(v *InstanceResourceModel) ComposeModelPtrOutput { return v.Compose }).(ComposeModelPtrOutput)
}

func (o InstanceResourceModelOutput) Files() pulumi.StringMapOutput {
	return o.ApplyT(func(v *InstanceResourceModel) pulumi.StringMapOutput { return v.Files }).(pulumi.StringMapOutput)
}

func (o InstanceResourceModelOutput) Instances() InstanceModelArrayOutput {
	return o.ApplyT(func(v *InstanceResourceModel) InstanceModelArrayOutput { return v.Instances }).(InstanceModelArrayOutput)
}

func (o InstanceResourceModelOutput) System() SystemModelPtrOutput {
	return o.ApplyT(func(v *InstanceResourceModel) SystemModelPtrOutput { return v.System }).(SystemModelPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceResourceModelInput)(nil)).Elem(), &InstanceResourceModel{})
	pulumi.RegisterOutputType(InstanceResourceModelOutput{})
}
