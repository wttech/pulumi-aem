// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace WTTech.Aem.Compose.Inputs
{

    public sealed class SystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Script executed once upon instance connection, often for mounting on VM data volumes from attached disks (e.g., AWS EBS, Azure Disk Storage). This script runs only once, even during instance recreation, as changes are typically persistent and system-wide. If re-execution is needed, it is recommended to set up a new machine.
        /// </summary>
        [Input("bootstrap")]
        public Input<Inputs.InstanceScriptArgs>? Bootstrap { get; set; }

        /// <summary>
        /// Remote root path in which AEM Compose files and unpacked AEM instances will be stored.
        /// </summary>
        [Input("data_dir")]
        public Input<string>? Data_dir { get; set; }

        [Input("env")]
        private InputMap<string>? _env;

        /// <summary>
        /// Environment variables for AEM instances.
        /// </summary>
        public InputMap<string> Env
        {
            get => _env ?? (_env = new InputMap<string>());
            set => _env = value;
        }

        /// <summary>
        /// Contents of the AEM system service definition file (systemd).
        /// </summary>
        [Input("service_config")]
        public Input<string>? Service_config { get; set; }

        /// <summary>
        /// Enabled the AEM system service (systemd).
        /// </summary>
        [Input("service_enabled")]
        public Input<bool>? Service_enabled { get; set; }

        /// <summary>
        /// Name of the AEM system service (systemd).
        /// </summary>
        [Input("service_name")]
        public Input<string>? Service_name { get; set; }

        /// <summary>
        /// System user under which AEM instance will be running. By default, the same as the user used to connect to the machine.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// Remote root path where provider-related files will be stored.
        /// </summary>
        [Input("work_dir")]
        public Input<string>? Work_dir { get; set; }

        public SystemArgs()
        {
        }
        public static new SystemArgs Empty => new SystemArgs();
    }
}
