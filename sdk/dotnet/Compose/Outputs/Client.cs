// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace WTTech.Aem.Compose.Outputs
{

    [OutputType]
    public sealed class Client
    {
        /// <summary>
        /// Used when trying to connect to the AEM instance machine (often right after creating it). Need to be enough long because various types of connections (like AWS SSM or SSH) may need some time to boot up the agent.
        /// </summary>
        public readonly string? Action_timeout;
        /// <summary>
        /// Credentials for the connection type
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Credentials;
        /// <summary>
        /// Settings for the connection type
        /// </summary>
        public readonly ImmutableDictionary<string, string> Settings;
        /// <summary>
        /// Used when reading the AEM instance state when determining the plan.
        /// </summary>
        public readonly string? State_timeout;
        /// <summary>
        /// Type of connection to use to connect to the machine on which AEM instance will be running.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private Client(
            string? action_timeout,

            ImmutableDictionary<string, string>? credentials,

            ImmutableDictionary<string, string> settings,

            string? state_timeout,

            string type)
        {
            Action_timeout = action_timeout;
            Credentials = credentials;
            Settings = settings;
            State_timeout = state_timeout;
            Type = type;
        }
    }
}
